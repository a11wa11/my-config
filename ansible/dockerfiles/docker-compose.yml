version: '3.5' #3.4以上でなければnetworksでnameを指定不可
services:  
  web:
    image: httpd:alpine
    ports:
      - "8080:80"

  CentOS7:
    build:
      context: .
      dockerfile: "Dockerfile_centos7"
    image: centos7i
    container_name: centos7
    hostname: CentOS7
    tty: true
    privileged: true
    networks:
      client_network:
        ipv4_address: 11.11.11.11

  ubuntu2004:
    build:
      context: .
      dockerfile: "Dockerfile_ubuntu2004"
    image: ubuntu2004i
    container_name: ubuntu2004
    hostname: Ubuntu2004
    ports:
      - "50500:22"
    tty: true
    privileged: true
    command: /sbin/init
    networks:
      client_network:
        ipv4_address: 11.11.11.14

  amazonlinux2:
    build:
      context: .
      dockerfile: "Dockerfile_amazonlinux2"
    image: amazonlinux2i
    container_name: amazonlinux2
    hostname: Amazonlinux2
    ports:
      - "50600:22"
    tty: true
    privileged: true
    command: /sbin/init
    networks:
      client_network:
        ipv4_address: 11.11.11.15

  amazonlinux2022:
    build:
      context: .
      dockerfile: "Dockerfile_amazonlinux2022"
    image: amazonlinux2022i
    container_name: amazonlinux2022
    hostname: Amazonlinux2022
    ports:
      - "50700:22"
    tty: true
    privileged: true
    command: /sbin/init
    networks:
      client_network:
        ipv4_address: 11.11.11.16

# ネットワークのサブネット値を指定する
networks:
  client_network:
    name: client_network
    ipam:
      config:
        - subnet: 11.11.11.0/24
        # docker network create --subnet=11.11.11.0/24 client_network

    # volumes:
    #   - "vol_mysql:/var/lib/mysql"
    #   - "./config_db/my.cnf:/etc/mysql/conf.d/my.cnf:ro"
      # ↓ /docker-entrypoint-initdb.dにある拡張子.sh、.sql、.sql.gzのファイルを実行する
    #   - "./config_db/start.sql:/docker-entrypoint-initdb.d/start.sql"
    # networks:
    #   - my-network

#   app:
#     build: ./config_python
#     image: im_python
#     container_name: con_py
#     env_file: ./config_db/mysql.env
#     tty: true
#     expose: 
#       - "80"
#       - "443"
#     ports:
#       - 8080:80
#       - 8081:443
#     volumes:
#       - "vol_python:/root/log"
#       - ".:/root/dirc"
#     depends_on:
#       - db 
#     networks:
#       - my-network

# volumes:
#   vol_mysql:
#   vol_python:
    
# networks:
#   my-network:
#     external: true
